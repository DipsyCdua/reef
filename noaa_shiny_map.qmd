---
title: "imane"
format: html
editor: source
---

# shiny app - MAP
```{r}
library(shiny)
library(shinydashboard)
library(dplyr)
library(sf)
library(leaflet)
library(stringr)
library(lubridate)
library(readr)
library(tidyr)
library(viridis)

```

```{r}
# change this to the folder directory "with_date"
data_dir = "/Users/imanelattab/Desktop/DATA3888/reef_dbs/noaa_data/with_date"
csv_files = list.files(data_dir, pattern = "\\.csv$", full.names = TRUE)

# read and format each csv
load_and_process_csv = function(file) {
  df = read_csv(file)
  df = df|>
    mutate(
      year = year(as.Date(date)),
      # extract lon/lat from WKT geometry string
      lon = as.numeric(str_extract(geometry, "(?<=\\().+?(?=\\s)")),
      lat = as.numeric(str_extract(geometry, "(?<=\\s)-?\\d+\\.\\d+(?=\\))"))
    )
  return(df)
}

all_data = bind_rows(lapply(csv_files, load_and_process_csv))

# yearly averages per point
yearly_avg = all_data |>
  group_by(year, lon, lat) |>
  summarise(mean_dhw = mean(mean_dhw, na.rm = TRUE), .groups = "drop") |>
  st_as_sf(coords = c("lon", "lat"), crs = 4326)

pal = colorNumeric(palette = viridis(100), domain = yearly_avg$mean_dhw)

# ui
ui = dashboardPage(
  dashboardHeader(title = "GBR Heat Map"),
  dashboardSidebar(
    sidebarMenu(
      menuItem("Map", tabName = "map", icon = icon("globe")),
      sliderInput("year", "Select Year:", min = min(yearly_avg$year), max = max(yearly_avg$year),
                  value = min(yearly_avg$year), step = 1, sep = "")
    )
  ),
  dashboardBody(
    tabItems(
      tabItem(tabName = "map",
        leafletOutput("map", height = "700px")
      )
    )
  )
)

# server
server = function(input, output, session) {
  filtered_data = reactive({
    yearly_avg |> 
      filter(year == input$year)
  })

  output$map <- renderLeaflet({
    leaflet() |>
      addProviderTiles("CartoDB.Positron") |>
      setView(lng = 147.6, lat = -18.3, zoom = 5)
  })

  observe({
    leafletProxy("map", data = filtered_data()) |>
      clearMarkers() |>
      clearControls() |>
      addCircleMarkers(
        radius = 3,
        stroke = FALSE,
        fillOpacity = 0.7,
        color = ~pal(mean_dhw),
        popup = ~paste0("DHW: ", round(mean_dhw, 2))
      ) |>
      addLegend(
        "topright", pal = pal, values = ~mean_dhw,
        title = "Mean DHW", opacity = 0.8
      )
  })
}

shinyApp(ui, server)
```


